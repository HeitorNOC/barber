// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  name           String
  avatar_url     String?
  created_at     DateTime   @default(now())
  email          String     @unique
  hashedPassword String?
  emailVerified  DateTime?
  uf             String?
  accounts       Account[]
  sessions       Session[]
  schedules      Schedule[]
  purchases      Purchase[]

  @@map("users")
}

model Schedule {
  id         String   @id @default(uuid())
  userId     String
  created_at DateTime @default(now())
  intialTime String
  endTime    String
  isCanceled Boolean
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Purchase {
  id         String   @id @default(uuid())
  userId     String
  created_at DateTime @default(now())
  value      Float
  method     String
  isCanceled Boolean
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId], name: "provider_providerAccountId")
  @@index([userId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}
